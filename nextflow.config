params {
    genomes = "data/*.fa"
    outdir = "./results"
    
    /* CheckM params */
    reduced_tree = false

    /* Filtering params */
    min_completeness = 50
    max_contamination = 10

    /* Dereplication params */
    skip_dereplication = false
    ani_thr = 0.95 // > 0.90
    min_overlap = 0.30

    max_cpus = 16
    max_memory = 64.GB
    max_time = 96.h
}

includeConfig 'process.config'

docker.enabled = true
docker.runOptions = '-u \$(id -u):\$(id -g)'

// see https://github.com/nextflow-io/nextflow/issues/640
def check_max(obj, max) {
    if( obj instanceof nextflow.util.MemoryUnit ) {
        try {
            def max_type = max as nextflow.util.MemoryUnit
            return obj.compareTo(max_type) == 1 ? max_type : obj
        }   
        catch( all ) {
            println "ERROR: invalid max memory '${max}', using default value: $obj"
            return obj
        }   
    }
    if( obj instanceof nextflow.util.Duration ) {
        try {
            def max_type = max as nextflow.util.Duration
            return obj.compareTo(max_type) == 1 ? max_type : obj
        }   
        catch( all ) {
            println "ERROR: invalid max time '${max}', using default value $obj"
            return obj
        }         
    }
    if( obj instanceof Integer ) {
        try {
            return Math.min(obj, max as int)
        }   
        catch( all ) {
            println "ERROR: invalid max cpus '${max}', using default value $obj"
            return obj
        }         
    }    
}
